// Code generated by mockery v2.46.2. DO NOT EDIT.

package errors

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockLogger is an autogenerated mock type for the Logger type
type MockLogger struct {
	mock.Mock
}

// Debug provides a mock function with given fields: _a0, _a1
func (_m *MockLogger) Debug(_a0 context.Context, _a1 any) {
	_m.Called(_a0, _a1)
}

// Error provides a mock function with given fields: _a0, _a1
func (_m *MockLogger) Error(_a0 context.Context, _a1 any) {
	_m.Called(_a0, _a1)
}

// Info provides a mock function with given fields: _a0, _a1
func (_m *MockLogger) Info(_a0 context.Context, _a1 any) {
	_m.Called(_a0, _a1)
}

// Warning provides a mock function with given fields: _a0, _a1
func (_m *MockLogger) Warning(_a0 context.Context, _a1 any) {
	_m.Called(_a0, _a1)
}

// NewMockLogger creates a new instance of MockLogger. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockLogger(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockLogger {
	mock := &MockLogger{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

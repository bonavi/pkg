version: "2"
run:
  issues-exit-code: 2
  tests: true
  modules-download-mode: mod
severity:
  default-severity: error
linters:
  enable:
    - asciicheck # Checks that all code identifiers does not have non-ASCII symbols in the name.
    - dupl # Detects duplicate fragments of code.
    - errcheck # Errcheck is a program for checking for unchecked errors in Go code. These unchecked errors can be critical bugs in some cases.
    - exhaustive # Check exhaustiveness of enum switch statements.
    - exhaustruct # Checks if all structure fields are initialized.
    - forcetypeassert # Finds forced type assertions.
    - gochecknoinits # Checks that no init functions are present in Go code.
    - goconst # Finds repeated strings that could be replaced by a constant.
    - gocritic # Provides diagnostics that check for bugs, performance and style issues. Extensible without recompilation through dynamic rules. Dynamic rules are written declaratively with AST patterns, filters, report message and optional suggestion.
    - gosec # Inspects source code for security problems.
    - gosmopolitan # Report certain i18n/l10n anti-patterns in your Go codebase.
    - govet # Vet examines Go source code and reports suspicious constructs. It is roughly the same as 'go vet' and uses its passes.
    - ineffassign # Detects when assignments to existing variables are not used.
    - misspell # Finds commonly misspelled English words.
    - musttag # Enforce field tags in (un)marshaled structs.
    - nilerr # Finds the code that returns nil even if it checks that the error is not nil.
    - prealloc # Finds slice declarations that could potentially be pre-allocated.
    - rowserrcheck # Checks whether Rows.Err of rows is checked successfully.
    - spancheck # Checks for mistakes with OpenTelemetry/Census spans.
    - unparam # Reports unused function parameters.
    - unused # Checks Go code for unused constants, variables, functions and types.
    - usestdlibvars # A linter that detect the possibility to use variables/constants from the Go standard library.
    - wastedassign # Finds wasted assignment statements.
  disable:
    - asasalint # Check for pass []any as any in variadic func(...any).
    - bidichk # Checks for dangerous unicode character sequences.
    - bodyclose # Checks whether HTTP response body is closed successfully.
    - containedctx # Containedctx is a linter that detects struct contained context.Context field.
    - contextcheck # Check whether the function uses a non-inherited context.
    - cyclop # Checks function and package cyclomatic complexity.
    - decorder # Check declaration order and count of types, constants, variables and functions.
    - depguard # Go linter that checks if package imports are in a list of acceptable packages.
    - dogsled # Checks assignments with too many blank identifiers (e.g. x, , , _, := f()).
    - durationcheck # Check for two durations multiplied together.
    - dupword # Checks for duplicate words in the source code.
    - errchkjson # Checks types passed to the json encoding functions. Reports unsupported types and reports occurrences where the check for the returned error can be omitted.
    - errname # Checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error.
    - errorlint # Errorlint is a linter for that can be used to find code that will cause problems with the error wrapping scheme introduced in Go 1.13.
    - funlen # Checks for long functions.
    - forbidigo # Forbids identifiers.
    - gochecknoglobals # Check that no global variables exist.
    - gocognit # Computes and checks the cognitive complexity of functions.
    - gocyclo # Computes and checks the cyclomatic complexity of functions.
    - godot # Check if comments end in a period.
    - godox # Detects usage of F IXME, T ODO and other keywords inside comments.
    - goheader # Checks if file header matches to pattern.
    - gomodguard # Allow and block list linter for direct Go module dependencies. This is different from depguard where there are different block types for example version constraints and module recommendations.
    - goprintffuncname # Checks that printf-like functions are named with f at the end.
    - grouper # Analyze expression groups.
    - interfacebloat # A linter that checks the number of methods inside an interface.
    - ireturn # Accept Interfaces, Return Concrete Types.
    - importas # Enforces consistent import aliases.
    - lll # Reports long lines.
    - loggercheck # Checks key value pairs for common logger libraries (kitlog,klog,logr,zap).
    - maintidx # Maintidx measures the maintainability index of each function.
    - makezero # Finds slice declarations with non-zero initial length.
    - mirror # Reports wrong mirror patterns of bytes/strings usage.
    - nakedret # Checks that functions with naked returns are not longer than a maximum size (can be zero).
    - nestif # Reports deeply nested if statements.
    - nilnil # Checks that there is no simultaneous return of nil error and an invalid value.
    - nlreturn # Nlreturn checks for a new line before return and branch statements to increase code clarity.
    - noctx # Finds sending http request without context.Context.
    - nolintlint # Reports ill-formed or insufficient nolint directives.
    - nonamedreturns # Reports all named returns.
    - nosprintfhostport # Checks for misuse of Sprintf to construct a host with port in a URL.
    - paralleltest # Detects missing usage of t.Parallel() method in your Go test.
    - predeclared # Find code that shadows one of Go's predeclared identifiers.
    - promlinter # Check Prometheus metrics naming via promlint.
    - reassign # Checks that package variables are not reassigned.
    - revive # Fast, configurable, extensible, flexible, and beautiful linter for Go. Drop-in replacement of golint.
    - staticcheck # It's the set of rules from staticcheck.
    - sqlclosecheck # Checks that sql.Rows, sql.Stmt, sqlx.NamedStmt, pgx.Query are closed.
    - tagliatelle # Checks the struct tags.
    - testableexamples # Linter checks if examples are testable (have an expected output).
    - testpackage # Linter that makes you use a separate _test package.
    - thelper # Thelper detects tests helpers which is not start with t.Helper() method.
    - tparallel # Tparallel detects inappropriate usage of t.Parallel() method in your Go test codes.
    - unconvert # Remove unnecessary type conversions.
    - varnamelen # Checks that the length of a variable's name matches its scope.
    - whitespace # Whitespace is a linter that checks for unnecessary newlines at the start and end of functions, if, for, etc.
    - wrapcheck # Checks that errors returned from external packages are wrapped.
    - wsl # Add or remove empty lines.
  exclusions:
    rules:
      - path: _test.go # Тесты
        linters:
          - exhaustruct
          - errcheck
          - bodyclose
          - dupl
      - path: openrtb # Библиотека, которая перекочевала из другого проекта
        linters:
          - exhaustruct
      - text: "baseLink" # Структура, которая используется в чейнах, указывать ее не имеет смысла
        linters:
          - exhaustruct
      - text: "G115" # Проверка на переполнение переменной
        linters:
          - gosec
      - text: "XMLName"
        linters:
          - exhaustruct
      - text: "Close"
        linters:
          - errcheck
